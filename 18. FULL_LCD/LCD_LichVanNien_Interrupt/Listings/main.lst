C51 COMPILER V9.60.0.0   MAIN                                                              07/05/2021 22:10:30 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <regx52.h>
   2          
   3          sbit RS = P0^0;
   4          sbit E = P0^1;
   5          
   6          #define _Data P2
   7          #define SECOND 0x00
   8          #define MINUTE 0x01
   9          #define HOUR   0x02
  10          #define DAY    0x03
  11          #define DATE   0x04
  12          #define MONTH  0x05
  13          #define YEAR   0x06
  14          
  15          sbit SDA = P1^0;
  16          sbit SCL = P1^1;
  17          
  18          unsigned char *code Data[] = {"SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"};
  19          
  20          // Sleep function 
  21          void Sleep_ms(unsigned int t)
  22          {
  23   1        unsigned int i, j;
  24   1        for(i = 0; i < t; i++)
  25   1        {
  26   2          for(j = 0; j < 123; j++);
  27   2        }
  28   1      }
  29          
  30          
  31          // ___________________LCD function__________________ //
  32          // CMD funciton 
  33          void Send_Cmd(unsigned char a)
  34          {
  35   1        RS = 0;
  36   1        _Data = a;
  37   1        E = 1; 
  38   1        E = 0;
  39   1        if(a <= 0x02)
  40   1        {
  41   2          Sleep_ms(2);
  42   2        }
  43   1        else
  44   1          Sleep_ms(1);
  45   1      }
  46          
  47          // Data function 
  48          void Send_Data(unsigned char a)
  49          {
  50   1        RS = 1;
  51   1        _Data = a;
  52   1        E = 1;
  53   1        E = 0;
  54   1        Sleep_ms(1);
C51 COMPILER V9.60.0.0   MAIN                                                              07/05/2021 22:10:30 PAGE 2   

  55   1      }
  56          
  57          // Send string data function 
  58          void Send_String(unsigned char *p)
  59          {
  60   1        unsigned char i = 0;
  61   1        while(p[i] != 0)
  62   1        {
  63   2          Send_Data(p[i]);
  64   2          i++;
  65   2        }
  66   1      }
  67          
  68          // Send _data ra vi tri bat ki
  69          void Send_Data_Locate(unsigned char Row, unsigned char Col, unsigned char _data)
  70          {
  71   1        unsigned char _locate;
  72   1        _locate = (Row == 1 ? 0x80 : 0xC0) + Col - 1;
  73   1        Send_Cmd(_locate);
  74   1        Send_Data(_data);
  75   1      }
  76          
  77          // Send string _data ra vi tri bat ki 
  78          void Send_String_Locate(unsigned char Row, unsigned char Col, unsigned char *_data)
  79          {
  80   1        unsigned char _locate;
  81   1        _locate = (Row == 1 ? 0x80 : 0xC0 ) + Col - 1;
  82   1        Send_Cmd(_locate);
  83   1        Send_String(_data);
  84   1      }
  85          
  86          // LCD initialize
  87          void LCD_Initialize()
  88          {
  89   1        // Dung khoang 100 ms de dien ap rise toi 4,5V 
  90   1        Sleep_ms(100);
  91   1        Send_Cmd(0x30);
  92   1        Sleep_ms(5);
  93   1        Send_Cmd(0x30);
  94   1        Sleep_ms(1);
  95   1        Send_Cmd(0x30);
  96   1        // Chon hien thi man hinh 2 dong co chu 5*7
  97   1        Send_Cmd(0x38);
  98   1        // Xoa man hinh 
  99   1        Send_Cmd(0x01);
 100   1        // Bat hien thi va tat con tro 
 101   1        Send_Cmd(0x0C);
 102   1      }
 103          
 104          
 105          /// ______________________DS1307 Function__________________________///
 106          
 107          
 108          // Start function 
 109          
 110          void DS1307_Start()
 111          {
 112   1        SCL = 1;
 113   1        SDA = 1;
 114   1        SDA = 0;
 115   1        SCL = 0;
 116   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              07/05/2021 22:10:30 PAGE 3   

 117          
 118          
 119          // Stop function 
 120          void DS1307_Stop()
 121          {
 122   1        SCL = 1;
 123   1        SDA = 0;
 124   1        SDA = 1;
 125   1      }
 126          
 127          // Write function
 128          void Write(unsigned char a)
 129          {
 130   1        unsigned char i = 0;
 131   1        for(i = 0; i < 8; i++)
 132   1        {
 133   2          SDA = a &( 0x80 >> i );
 134   2          SCL = 1;
 135   2          SCL = 0;
 136   2        }
 137   1        SCL = 1;
 138   1        SCL = 0;
 139   1      }
 140          
 141          // Read function 
 142          unsigned char Read(void)
 143          {
 144   1        bit _rdata;
 145   1        unsigned char _data, i;
 146   1        _data = 0x00;
 147   1        for(i = 0; i < 8; i++)
 148   1        {
 149   2          SCL = 1;
 150   2          _rdata = SDA; 
 151   2          _data <<= 1;
 152   2          _data |= _rdata;
 153   2          SCL = 0;
 154   2        }
 155   1        return _data;
 156   1      }
 157          
 158          // DS1307 Write function 
 159          void DS1307_Write(unsigned char _address, unsigned char _data)
 160          {
 161   1        unsigned char __data;
 162   1        __data = (_data / 10) * 16 + (_data % 10);
 163   1        DS1307_Start();
 164   1        Write(0xD0);
 165   1        Write(_address);
 166   1        Write(__data);
 167   1        DS1307_Stop();
 168   1      }
 169          
 170          // DS1307 READ function 
 171          unsigned char DS1307_Read(unsigned char _address)
 172          {
 173   1        unsigned char _data;
 174   1        DS1307_Start();
 175   1        Write(0xD0);
 176   1        Write(_address);
 177   1        DS1307_Start();
 178   1        Write(0xD1);
C51 COMPILER V9.60.0.0   MAIN                                                              07/05/2021 22:10:30 PAGE 4   

 179   1        _data = Read();
 180   1        DS1307_Stop();
 181   1        _data = (_data / 16) * 10 + (_data % 16);
 182   1        return _data;
 183   1      }
 184          
 185          // Main function 
 186          
 187          void LCD_LichVanNien_Interrupt()
 188          {
 189   1        unsigned char _second, _minute, _hour, _day, _date, _month, _year;
 190   1        LCD_Initialize();
 191   1        DS1307_Write(0x07, 0x10);
 192   1        
 193   1        // Ngat theo canh xuong
 194   1        IT1 = 1;
 195   1        // Cho phep ngat ngoai 1 
 196   1        EX1 = 1;
 197   1        // Cho phep ngat 
 198   1        EA = 1;
 199   1        while(1)
 200   1        {
 201   2          _second = DS1307_Read(SECOND);
 202   2          _minute = DS1307_Read(MINUTE);
 203   2          _hour   = DS1307_Read(HOUR);
 204   2          _day    = DS1307_Read(DAY);
 205   2          _date   = DS1307_Read(DATE);
 206   2          _month  = DS1307_Read(MONTH);
 207   2          _year  = DS1307_Read(YEAR);
 208   2          
 209   2          // show clock time
 210   2          Send_Data_Locate(1, 5, _hour / 10 + 0x30);
 211   2          Send_Data(_hour % 10 + 0x30);
 212   2          Send_Data(':');
 213   2          Send_Data(_minute / 10 + 0x30);
 214   2          Send_Data(_minute % 10 + 0x30);
 215   2          Send_Data(':');
 216   2          Send_Data(_second / 10 + 0x30);
 217   2          Send_Data(_second % 10 + 0x30);
 218   2          // show day date time
 219   2          
 220   2          Send_String_Locate(2,2,Data[_day - 1]);
 221   2          Send_Data(' ');
 222   2          Send_Data(_date / 10 + 0x30);
 223   2          Send_Data(_date % 10 + 0x30);
 224   2          Send_Data('/');
 225   2          Send_Data(_month / 10 + 0x30);
 226   2          Send_Data(_month % 10 + 0x30);
 227   2          Send_Data('/');
 228   2          Send_String("20");
 229   2          Send_Data(_year / 10 + 0x30);
 230   2          Send_Data(_year % 10 + 0x30);
 231   2          PCON |= 0x01;
 232   2          
 233   2        }
 234   1      }
 235          
 236          void EX1_ISR(void) interrupt 2
 237          {
 238   1      }
 239          
 240          void main()
C51 COMPILER V9.60.0.0   MAIN                                                              07/05/2021 22:10:30 PAGE 5   

 241          {
 242   1        LCD_LichVanNien_Interrupt();
 243   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    646    ----
   CONSTANT SIZE    =     52    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
