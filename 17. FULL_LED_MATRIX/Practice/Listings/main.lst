C51 COMPILER V9.60.0.0   MAIN                                                              07/29/2021 23:54:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <regx52.h>
   2          
   3          unsigned char code Cot[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
   4          
   5          unsigned char code Data[26][8]= { 
   6                                        0xFF, 0xC0, 0x80, 0xB7, 0xB7, 0x80, 0xC0, 0xFF,     // A
   7                                        0xFF, 0x80, 0x80, 0xB6, 0xB6, 0x80, 0xC9, 0xFF,     // B 
   8                                        0xFF, 0xC1, 0x80, 0xBE, 0xBE, 0x9C, 0xDD, 0xFF,     // C
   9                                        0xFF, 0x80, 0x80, 0xBE, 0xBE, 0x80, 0xC1, 0xFF,     // D
  10                                        0xFF, 0x80, 0x80, 0xB6, 0xB6, 0xBE, 0xBE, 0xFF,     // E
  11                                        0xFF, 0x80, 0x80, 0xB7, 0xB7, 0xBF, 0xBF, 0xFF,     // F
  12                                        0xFF, 0xC1, 0x80, 0xBE, 0xBA, 0x98, 0xD9, 0xFF,     // G
  13                                        0xFF, 0x80, 0x80, 0xF7, 0xF7, 0x80, 0x80, 0xFF,     // H
  14                                        0xFF, 0xFF, 0xBE, 0x80, 0x80, 0xBE, 0xFF, 0xFF,     // I
  15                                        0xFF, 0xF9, 0xF8, 0xBE, 0x80, 0x81, 0xBF, 0xFF,     // J
  16                                        0xFF, 0x80, 0x80, 0xE3, 0xC9, 0x9C, 0xBE, 0xFF,     // K
  17                                        0xFF, 0x80, 0x80, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF,     // L
  18                                        0xFF, 0x80, 0x80, 0xCF, 0xE7, 0xCF, 0x80, 0x80,     // M
  19                                        0xFF, 0x80, 0x80, 0xCF, 0xE7, 0xF3, 0x80, 0x80,     // N
  20                                        0xFF, 0xC1, 0x80, 0xBE, 0xBE, 0x80, 0xC1, 0xFF,     // O
  21                                        0xFF, 0x80, 0x80, 0xBB, 0xBB, 0x83, 0xC7, 0xFF,     // P
  22                                        0xFF, 0xC3, 0x81, 0xBD, 0xBD, 0x80, 0xC2, 0xFF,     // Q
  23                                        0xFF, 0x80, 0x80, 0xB3, 0xB1, 0x84, 0xCE, 0xFF,     // R
  24                                        0xFF, 0xCD, 0x84, 0xB6, 0xB6, 0x90, 0xD9, 0xFF,     // S
  25                                        0xFF, 0x9F, 0xBF, 0x80, 0x80, 0xBF, 0x9F, 0xFF,     // T
  26                                        0xFF, 0x81, 0x80, 0xFE, 0xFE, 0x80, 0x80, 0xFF,     // U
  27                                        0xFF, 0x83, 0x81, 0xFC, 0xFC, 0x81, 0x83, 0xFF,     // V
  28                                        0xFF, 0x80, 0x80, 0xF9, 0xF3, 0xF9, 0x80, 0x80,     // W
  29                                        0xFF, 0x9C, 0x88, 0xE3, 0xF7, 0xE3, 0x88, 0x9C,     // X
  30                                        0xFF, 0x8F, 0x87, 0xF0, 0xF0, 0x87, 0x8F, 0xFF,     // Y
  31                                        0xFF, 0xBC, 0xB8, 0xB2, 0xA6, 0x8E, 0x9E, 0xFF,     // Z
  32                                        };
  33          
  34          unsigned char code Number[10][8] = {
  35                                        0xFF, 0xFE, 0xEE, 0x80, 0x80, 0xFE, 0xFE, 0xFF,     // 1
  36                                        0xFF, 0xDC, 0x98, 0xBA, 0xB6, 0x86, 0xCE, 0xFF,     // 2
  37                                        0xFF, 0xDD, 0x9C, 0xB6, 0xB6, 0x80, 0xC9, 0xFF,     // 3
  38                                        0xFF, 0xF3, 0xEB, 0xDB, 0x80, 0x80, 0xFB, 0xFF,     // 4
  39                                        0xFF, 0x8D, 0x8C, 0xAE, 0xAE, 0xA0, 0xB1, 0xFF,     // 5
  40                                        0xFF, 0xC1, 0x80, 0xB6, 0xB6, 0x90, 0xD9, 0xFF,     // 6
  41                                        0xFF, 0x9F, 0x9F, 0xB8, 0xA0, 0x87, 0x9F, 0xFF,     // 7
  42                                        0xFF, 0xC9, 0x80, 0xB6, 0xB6, 0x80, 0xC9, 0xFF,     // 8
  43                                        0xFF, 0xCD, 0x84, 0xB6, 0xB6, 0x80, 0xC1, 0xFF,     // 9
  44                                        0xFF, 0xC1, 0x80, 0xAE, 0xB6, 0x80, 0xC1, 0xFF,     // 0}                           
  45                                       };
  46          
  47          sbit SHCP = P2^0;
  48          sbit DS = P2^1;
  49          sbit STCP = P2^3;
  50          
  51          void Send_Data(unsigned char _data)
  52          {
  53   1        unsigned char i;
  54   1        for(i = 0; i < 8; i++)
C51 COMPILER V9.60.0.0   MAIN                                                              07/29/2021 23:54:37 PAGE 2   

  55   1        {
  56   2          DS = _data & (0x80 >> i);
  57   2          SHCP = 0;
  58   2          SHCP = 1;
  59   2        }
  60   1        STCP = 0;
  61   1        STCP = 1;
  62   1      } 
  63          
  64          
  65          void Sleep_ms(unsigned int t)
  66          {
  67   1        unsigned int i, j;
  68   1        for(i = 0; i < t; i++)
  69   1        {
  70   2          for(j = 0; j < 123; j++);
  71   2        }
  72   1      }
  73          
  74          void main()
  75          {
  76   1        unsigned int i, j, k;
  77   1        unsigned char flag_1, flag_2;
  78   1        while(1)
  79   1        {
  80   2          flag_1 = 0, flag_2 = 0;
  81   2          while(flag_1 < 26)
  82   2          {
  83   3            for(k = 0; k < 50; k++)
  84   3            {
  85   4              for(i = 0; i < 8; i++)
  86   4              {
  87   5                Send_Data(Data[flag_1][i]);
  88   5                P0 = Cot[i];
  89   5                Sleep_ms(1);
  90   5                P0 = 0x00;
  91   5              }
  92   4            }
  93   3            flag_1++;
  94   3          }
  95   2          while(flag_2 < 10)
  96   2          {
  97   3            for(k = 0; k < 50; k++)
  98   3            {
  99   4              for(j = 0; j < 8; j++)
 100   4              {
 101   5                Send_Data(Number[flag_2][j]);
 102   5                P0 = Cot[j];
 103   5                Sleep_ms(1);
 104   5                P0 = 0x00;
 105   5              }
 106   4            }
 107   3            flag_2++;
 108   3          }
 109   2        }
 110   1      }
 111          
 112          
 113          
 114          
 115          
 116          
C51 COMPILER V9.60.0.0   MAIN                                                              07/29/2021 23:54:37 PAGE 3   

 117          
 118          
 119          
 120          
 121          
 122          
 123          
 124          
 125          
 126          
 127          
 128          
 129          
 130          
 131          
 132          
 133          
 134          
 135          
 136          
 137          
 138          
 139          
 140          
 141          
 142          
 143          
 144          
 145          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    313    ----
   CONSTANT SIZE    =    296    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
