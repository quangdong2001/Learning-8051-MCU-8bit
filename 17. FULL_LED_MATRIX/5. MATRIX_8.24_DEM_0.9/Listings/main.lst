C51 COMPILER V9.60.0.0   MAIN                                                              06/05/2021 16:32:34 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <regx52.h>
   2          
   3          
   4          sbit SH_CP = P2^0;
   5          sbit DS = P2^1;
   6          sbit ST_CP = P2^3;
   7          
   8          
   9          
  10          unsigned char code Cot[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
  11          unsigned char code Data[] = {   
  12                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  13                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  14                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  15                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  16                                       0xFF, 0xC3, 0x81, 0x7E, 0x7E, 0x81, 0xC3, 0xFF,  // So 0
  17                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  18                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  19                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  20                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  21                                       0xFF, 0xFF, 0xDE, 0xBE, 0x00, 0xFE, 0xFE, 0xFF,  // So 1 
  22                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  23                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  24                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  25                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  26                                       0xFF, 0x9E, 0x3C, 0x78, 0x72, 0x26, 0x8E, 0xFF,  // So 2
  27                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  28                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  29                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  30                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  31                                       0xFF, 0x24, 0x24, 0x24, 0x24, 0x00, 0x00, 0xFF,  // So 3
  32                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  33                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  34                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  35                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  36                                       0xF3, 0xE3, 0xC3, 0x93, 0x33, 0x00, 0x00, 0xFF,  // So 4 
  37                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  38                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  39                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  40                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  41                                       0xFF, 0x04, 0x04, 0x24, 0x24, 0x20, 0x20, 0xFF,  // So 5
  42                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  43                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  44                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  45                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  46                                       0xFF, 0x00, 0x00, 0x66, 0x66, 0x20, 0x20, 0xFF,  // So 6
  47                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  48                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  49                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  50                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  51                                       0xFF, 0x3F, 0x3C, 0x38, 0x31, 0x03, 0x07, 0xFF,  // So 7
  52                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  53                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  54                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
C51 COMPILER V9.60.0.0   MAIN                                                              06/05/2021 16:32:34 PAGE 2   

  55                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  56                                       0xFF, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0xFF,  // So 8 
  57                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  58                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  59                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  60                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,   // Delay
  61                                       0xFF, 0x04, 0x04, 0x24, 0x24, 0x00, 0x00, 0xFF,  // So 9 
  62                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  63                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  64                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  65                                       0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Delay
  66                                      };
  67          
  68                                      
  69          void Sleep_ms(unsigned int t)
  70          {
  71   1        unsigned int i,j;
  72   1        for(i = 0; i < t; i++)
  73   1        {
  74   2          for(j = 0; j < 123; j++);
  75   2        }
  76   1      }
  77          
  78          
  79          void SEND_DATA(unsigned char a)
  80          {
  81   1        unsigned char i;
  82   1        for(i = 0; i < 8; i++)
  83   1        {
  84   2          DS = a & (0x80 >> i);
  85   2          SH_CP = 0;
  86   2          SH_CP = 1;
  87   2        }
  88   1        ST_CP = 0;
  89   1        ST_CP = 1;
  90   1      }
  91          
  92          void MATRIX_8_32()
  93          {
  94   1        while(1)
  95   1        {
  96   2          unsigned int i,j,k;
  97   2          for(i = 0; i < 400; i++)
  98   2          {
  99   3            for(k = 0; k < 5; k++)
 100   3            {
 101   4              for(j = 0; j < 8; j++)
 102   4              {
 103   5                SEND_DATA(Data[i+j+0]);
 104   5                SEND_DATA(Data[i+j+8]);
 105   5                SEND_DATA(Data[i+j+16]);
 106   5                SEND_DATA(Data[i+j+24]);
 107   5                
 108   5                P0 = Cot[j];
 109   5                Sleep_ms(1);
 110   5                P0 = 0x00;
 111   5                
 112   5              }
 113   4            }
 114   3          }
 115   2        }
 116   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              06/05/2021 16:32:34 PAGE 3   

 117          
 118          
 119          void main()
 120          {
 121   1        P0 = 0x00;
 122   1        MATRIX_8_32();
 123   1        
 124   1      }
 125          
 126          
 127          
 128          
 129          
 130          
 131          
 132          
 133          
 134          
 135          
 136          
 137          
 138          
 139          
 140          
 141          
 142          
 143          
 144          
 145          
 146          
 147          
 148          
 149          
 150          
 151          
 152          
 153          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    279    ----
   CONSTANT SIZE    =    440    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
